<?xml version="1.0" encoding="UTF-8"?>
<!--

    Approved for Public Release: 10-4800. Distribution Unlimited.
    Copyright 2011 The MITRE Corporation,
    Licensed under the Apache License,
    Version 2.0 (the "License");

    You may not use this file except in compliance with the License.
    You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
    either express or implied.

    See the License for the specific language governing permissions and limitations under the License.

-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:sec="http://www.springframework.org/schema/security"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:oxm="http://www.springframework.org/schema/oxm"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation=
       "http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security-3.1.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.1.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
       http://www.springframework.org/schema/oxm
       http://www.springframework.org/schema/oxm/spring-oxm-3.1.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">

    <!-- Enables support for annotations such as @Autowired -->
    <context:annotation-config/>
    
    <!-- properties file used to provide values for ${property} expressions -->
    <context:property-placeholder location="classpath:cow-server.properties" />
    
    <bean id="cow" class="org.wiredwidgets.cow.server.api.service.Cow" >
        <!-- This value is generated by the Maven build -->
        <property name="version" value="${project.version}" />
    </bean>    

    <!-- Custom converter classes used by the ConversionService -->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean" >
        <property name="converters">
            <util:set>
                <bean class="org.wiredwidgets.cow.server.convert.DateToXMLGregorianCalendar" />
                <bean class="org.wiredwidgets.cow.server.convert.JbpmToSc2HistoryTask" />
                <bean class="org.wiredwidgets.cow.server.convert.JbpmToSc2HistoryActivity" />
                <bean class="org.wiredwidgets.cow.server.convert.JbpmToSc2Participation" />
                <bean class="org.wiredwidgets.cow.server.convert.JbpmToSc2ProcessInstance" />
                <bean class="org.wiredwidgets.cow.server.convert.JbpmToSc2HistoryProcessInstance" />
                <bean class="org.wiredwidgets.cow.server.convert.JbpmToSc2ProcessDefinition" />
                <bean class="org.wiredwidgets.cow.server.convert.JbpmToSc2Task" />
                <bean class="org.wiredwidgets.cow.server.convert.JbpmToSc2User" />
                <bean class="org.wiredwidgets.cow.server.convert.JbpmToSc2Group" />
                <bean class="org.wiredwidgets.cow.server.convert.Sc2ToJbpmTask" />
            </util:set>
        </property>
    </bean>

    <bean id="myDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${datasource.driverClassName}" />
        <property name="url" value="${datasource.url}" />
        <property name="username" value="${datasource.username}"/>
        <property name="password" value="${datasource.password}" />
    </bean>

    <!-- Hibernate configuration -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <!-- <property name="configLocation" value="/hibernate.cfg.xml"/> -->
        <property name="dataSource" ref="myDataSource"/>
        <property name="hibernateProperties">
            <!-- note that multiple name/value pairs can be added inside the <value> element -->
            <value>
                hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
<!--                hibernate.show_sql=true-->
<!--                hibernate.hbm2ddl.auto=update-->
            </value>
        </property>
        <property name="mappingResources">
            <!-- Hibernate mapping files used by JBPM.  These are found in jbpm-pvm-4.4.jar -->
            <value>jbpm.repository.hbm.xml,jbpm.execution.hbm.xml,jbpm.history.hbm.xml,jbpm.task.hbm.xml,jbpm.identity.hbm.xml</value>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <!-- enable the configuration of transactional behavior based on annotations -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- Specify packages containing JAXB generated classes for marshalling/unmarshalling -->
    <oxm:jaxb2-marshaller id="jaxb-marshaller" contextPath="org.wiredwidgets.cow.server.api.service:org.jbpm._4_4.jpdl:org.wiredwidgets.cow.server.api.model.v2:org.omg.spec.bpmn._20100524.model" />

    <!-- The Jackson library provides support for JSON as an alternative to XML 
         REST clients can request JSON by setting the Accept header to 'application/json' instead of 'application/xml' -->
    <bean id="jacksonJaxbAnnotationIntrospector" class="org.codehaus.jackson.xc.JaxbAnnotationIntrospector" />

    <bean id="jacksonObjectMapper" class="org.codehaus.jackson.map.ObjectMapper">
        <property name="deserializationConfig.annotationIntrospector" ref="jacksonJaxbAnnotationIntrospector" />
        <property name="serializationConfig.annotationIntrospector" ref="jacksonJaxbAnnotationIntrospector" />
    </bean>

    <!-- Define HTTP Message Converters used by the REST API -->
    
    <bean id="marshallingHttpMessageConverter"
          class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
        <property name="marshaller" ref="jaxb-marshaller" />
        <property name="unmarshaller" ref="jaxb-marshaller" />
        <!-- By default, this converter supports MediaType application/*+xml -->
        <!-- This causes problems when invoked from IE, which accepts application/xaml+xml -->
        <!-- thus causing the service to return application/xaml+xml, which IE then tries to handle as a WPF application -->
        <property name="supportedMediaTypes" value="application/xml" />
    </bean>    
    
    <bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter" />

    <bean id="sourceHttpMessageConverter" class="org.springframework.http.converter.xml.SourceHttpMessageConverter" />

    <bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
        <property name="objectMapper" ref="jacksonObjectMapper" />
    </bean>
    
    <!-- JBPM API integration with Spring.  See http://docs.jboss.org/jbpm/v4/devguide/html_single/#springIntegration -->
    <bean id="jbpmConfiguration" class="org.jbpm.pvm.internal.processengine.SpringHelper" />
    
    <!-- JBPM API Service classes -->
    <bean id="repositoryService" factory-bean="processEngine" factory-method="getRepositoryService" /> 
    <bean id="executionService" factory-bean="processEngine" factory-method="getExecutionService" />
    <bean id="historyService" factory-bean="processEngine" factory-method="getHistoryService" />
    <bean id="jbpmTaskService" factory-bean="processEngine" factory-method="getTaskService" />
    <bean id="identityService" factory-bean="processEngine" factory-method="getIdentityService" />    
    <bean id="processEngine" factory-bean="jbpmConfiguration" factory-method="createProcessEngine" />
    
    <!-- Custom Service classes -->
    <bean id="processService" class="org.wiredwidgets.cow.server.service.ProcessServiceImpl" />
    <bean id="processInstanceService" class="org.wiredwidgets.cow.server.service.ProcessInstanceServiceImpl" />
    <bean id="processDefinitionsService" class="org.wiredwidgets.cow.server.service.ProcessDefinitionsServiceImpl" />
    <bean id="taskService" class="org.wiredwidgets.cow.server.service.TaskServiceImpl" />
    <bean id="usersService" class="org.wiredwidgets.cow.server.service.UsersServiceImpl" />
    
    <!-- Classes used for notifications -->

    <bean id="concurrentTaskScheduler" class="org.springframework.scheduling.concurrent.ConcurrentTaskScheduler" />
      
    <bean id="taskEventListener"  class="org.wiredwidgets.cow.server.listener.TaskEventListener" scope="prototype" />
    
    <bean id="serviceInvokerListener"  class="org.wiredwidgets.cow.server.listener.ServiceInvokerListener" scope="prototype" />
    
    <bean id="logNotifier" class="org.wiredwidgets.cow.server.listener.LogNotifier"  />
   
   	<!-- AMQP integration -->
   	<bean id="amqpNotifier" class="org.wiredwidgets.cow.server.listener.AmqpNotifier" init-method="init" >
   		<property name="host" value="${amqp.host}" />
   		<property name="port" value="${amqp.port}" />
   	</bean>
   
    <!-- XMPP integration -->
    <bean id="xmppConnection" class="org.jivesoftware.smack.XMPPConnection">
        <constructor-arg type="java.lang.String" value="${xmpp.host}" />
    </bean>
    
    <bean id="xmppChatNotifier" class="org.wiredwidgets.cow.server.listener.XmppChatNotifier" destroy-method="shutdown" >
        <property name="notifyUser" value="${xmpp.notify.user}" />
        <property name="notifyPassword" value="${xmpp.notify.password}" />
    </bean>
    
    <bean id="xmppConnectionListener" class="org.wiredwidgets.cow.server.listener.XmppConnectionListener" />

    <bean id="notifierRegistry" class="org.wiredwidgets.cow.server.listener.NotifierRegistry">
        <property name="notifiers">
            <util:list>
                <ref  bean="xmppChatNotifier" />
<!--                <ref  bean="logNotifier" />-->
            </util:list>
        </property>
    </bean>
    
    <!-- Classes used for process XML generation -->
    
    <bean id="jdplProcessBuilder" class="org.wiredwidgets.cow.server.transform.v2.jpdl.JpdlProcessBuilder" />
    <bean id="bpmn20ProcessBuilder" class="org.wiredwidgets.cow.server.transform.v2.bpmn20.Bpmn20ProcessBuilder" />    

    <bean id="activityBuilderFactoryFactory" class="org.wiredwidgets.cow.server.transform.v2.ActivityBuilderFactoryFactory">
        <property name="factories">
            <util:list>
                <!-- BypassableActivityBuilder is first, as any subtype may be bypassable -->
                <bean class="org.wiredwidgets.cow.server.transform.v2.BypassableActivityBuilderFactory" />
                <bean class="org.wiredwidgets.cow.server.transform.v2.DecisionActivityBuilderFactory" />
                <bean class="org.wiredwidgets.cow.server.transform.v2.GatewayDecisionActivityBuilderFactory" />
                <bean class="org.wiredwidgets.cow.server.transform.v2.GatewayLoopActivityBuilderFactory" />
                <bean class="org.wiredwidgets.cow.server.transform.v2.LoopActivityBuilderFactory" />
                <bean class="org.wiredwidgets.cow.server.transform.v2.ParallelSetActivityBuilderFactory" />
                <bean class="org.wiredwidgets.cow.server.transform.v2.ComplexSetActivityBuilderFactory" />
                <bean class="org.wiredwidgets.cow.server.transform.v2.SequentialSetActivityBuilderFactory" />
                <bean class="org.wiredwidgets.cow.server.transform.v2.TaskActivityBuilderFactory" />
                <bean class="org.wiredwidgets.cow.server.transform.v2.ServiceTaskActivityBuilderFactory" />
                <bean class="org.wiredwidgets.cow.server.transform.v2.SubProcessActivityBuilderFactory" />
                <bean class="org.wiredwidgets.cow.server.transform.v2.ExitActivityBuilderFactory" />
            </util:list>
        </property>
    </bean>

    <bean id="nodeBuilderFactoryFactory" class="org.wiredwidgets.cow.server.transform.v2.NodeBuilderFactoryFactory">
        <property name="factories">
            <util:set>
                <bean class="org.wiredwidgets.cow.server.transform.v2.jpdl.JpdlTaskNodeBuilderFactory" />
                <bean class="org.wiredwidgets.cow.server.transform.v2.jpdl.JpdlServiceTaskNodeBuilderFactory" />
                <bean class="org.wiredwidgets.cow.server.transform.v2.jpdl.JpdlSubProcessNodeBuilderFactory" />
                <bean class="org.wiredwidgets.cow.server.transform.v2.jpdl.JpdlExitNodeBuilderFactory" />
                <bean class="org.wiredwidgets.cow.server.transform.v2.bpmn20.Bpmn20UserTaskNodeBuilderFactory" />
                <bean class="org.wiredwidgets.cow.server.transform.v2.bpmn20.Bpmn20ServiceTaskNodeBuilderFactory" />
                <bean class="org.wiredwidgets.cow.server.transform.v2.bpmn20.Bpmn20SubProcessNodeBuilderFactory" />
                <bean class="org.wiredwidgets.cow.server.transform.v2.bpmn20.Bpmn20ExitNodeBuilderFactory" />

                <bean class="org.wiredwidgets.cow.server.transform.v2.jpdl.JpdlForkNodeBuilderFactory" />
                <bean class="org.wiredwidgets.cow.server.transform.v2.bpmn20.Bpmn20DivergingParallelGatewayNodeBuilderFactory" />
                <bean class="org.wiredwidgets.cow.server.transform.v2.bpmn20.Bpmn20DivergingExclusiveGatewayNodeBuilderFactory" />
                <bean class="org.wiredwidgets.cow.server.transform.v2.bpmn20.Bpmn20DivergingComplexGatewayNodeBuilderFactory" />

                <bean class="org.wiredwidgets.cow.server.transform.v2.jpdl.JpdlJoinNodeBuilderFactory" />
                <bean class="org.wiredwidgets.cow.server.transform.v2.bpmn20.Bpmn20ConvergingParallelGatewayNodeBuilderFactory" />
                <bean class="org.wiredwidgets.cow.server.transform.v2.bpmn20.Bpmn20ConvergingExclusiveGatewayNodeBuilderFactory" />
                <bean class="org.wiredwidgets.cow.server.transform.v2.bpmn20.Bpmn20ConvergingComplexGatewayNodeBuilderFactory" />
            </util:set>
        </property>
    </bean>
    
    <bean id="evaluatorFactory" class="org.wiredwidgets.cow.server.completion.EvaluatorFactory" />
    <bean id="activitiesEvaluator" class="org.wiredwidgets.cow.server.completion.ActivitiesEvaluator" scope="prototype" />
    <bean id="bypassableActivityEvaluator" class="org.wiredwidgets.cow.server.completion.BypassableActivityEvaluator" scope="prototype" />
    <bean id="decisionEvaluator" class="org.wiredwidgets.cow.server.completion.DecisionEvaluator" scope="prototype" />
    <bean id="exitEvaluator" class="org.wiredwidgets.cow.server.completion.ExitEvaluator" scope="prototype" />
    <bean id="loopEvaluator" class="org.wiredwidgets.cow.server.completion.LoopEvaluator" scope="prototype" />
    <bean id="processEvaluator" class="org.wiredwidgets.cow.server.completion.ProcessEvaluator" scope="prototype" />
    <bean id="serviceTaskEvaluator" class="org.wiredwidgets.cow.server.completion.ServiceTaskEvaluator" scope="prototype" />
    <bean id="subProcessEvaluator" class="org.wiredwidgets.cow.server.completion.SubProcessEvaluator" scope="prototype" />
    <bean id="taskEvaluator" class="org.wiredwidgets.cow.server.completion.TaskEvaluator" scope="prototype" />

    <!-- Special instance of the stringMessageConverter that reads and writes application/xml content -->
    <!-- this allows it to handle XML content stored in a String object -->
    <bean id="xmlStringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter" >
        <property name="supportedMediaTypes" value="application/xml" />
    </bean>
    
    <!-- Instance of RestTemplate, used by RestServiceInvoker -->
    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate" >
        <property name="messageConverters">
            <util:list>
                <ref bean="marshallingHttpMessageConverter" />
                <ref bean="xmlStringHttpMessageConverter" />
            </util:list>
        </property>
    </bean>

</beans>
